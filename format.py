from telebot import types

import db

category_1 = 'üç≤ –ü–µ—Ä–≤—ã–µ –±–ª—é–¥–∞'
category_2 = 'üçù –í—Ç–æ—Ä—ã–µ –±–ª—é–¥–∞'
category_3 = 'ü•ó –°–∞–ª–∞—Ç—ã'
category_4 = 'üßÉ –ù–∞–ø–∏—Ç–∫–∏'

def get_hello_admin_keyboard():
    '''
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –±–æ—Ç–∞
    '''
    result = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menu = types.KeyboardButton(text='/menu')
    result.add(menu)
    return result

def get_menu_add_keyboard():
    '''
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –º–µ–Ω—é
    '''
    result = types.InlineKeyboardMarkup()
    add = types.InlineKeyboardButton(text='‚ûï', callback_data='menu_add')
    result.add(add)
    return result

def get_menu_keyboard():
    '''
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω—é
    '''
    result = types.InlineKeyboardMarkup()
    add = types.InlineKeyboardButton(text='‚ûï', callback_data='menu_add')
    edit = types.InlineKeyboardButton(text='üìù', callback_data='menu_edit')
    delete = types.InlineKeyboardButton(text='üóëÔ∏è', callback_data='menu_delete')
    result.add(add, edit, delete)
    return result

def get_menu_category_keyboard():
    '''
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥–∞
    '''
    result = types.ReplyKeyboardMarkup(resize_keyboard=True)
    cat_1 = types.KeyboardButton(text=category_1)
    cat_2 = types.KeyboardButton(text=category_2)
    cat_3 = types.KeyboardButton(text=category_3)
    cat_4 = types.KeyboardButton(text=category_4)
    result.add(cat_1, cat_2)
    result.add(cat_3, cat_4)
    return result

def get_hello_admin_text() -> str:
    '''
    –¢–µ–∫—Å—Ç –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    '''
    return '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /menu'

def format_menu_list(menu: db.Food) -> str:
    '''
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–µ–Ω—é
    '''
    result = ''
    last_category = 0
    for food in menu:
        if food.category != last_category:
            last_category = food.category
            match last_category:
                case 1:
                    result += f'\n<b>{category_1}</b>\n'
                case 2:
                    result += f'\n<b>{category_2}</b>\n'
                case 3:
                    result += f'\n<b>{category_3}</b>\n'
                case 4:
                    result += f'\n<b>{category_4}</b>\n'
        result += f' {food.name} <i>{food.price} —Ä—É–±.</i>\n'
    return result

 